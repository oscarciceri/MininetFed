# syntax=docker/dockerfile:1.9.0-labs
FROM ubuntu:focal

VOLUME /flw
ENV DEBIAN_FRONTEND=noninteractive

RUN apt-get update && apt-get install -y \
    software-properties-common && \
    add-apt-repository ppa:deadsnakes/ppa && \
    apt-get update && \
    apt-get install -y \
    net-tools \
    iputils-ping \
    iproute2 \
    curl \
    git \
    make \
    cmake \
    g++ \
    gcc \
    libxml2-dev \
    libgmp-dev \
    libmpfr-dev \
    pybind11-dev \
    libxslt1-dev \
    zlib1g-dev \
    libssl-dev \
    pkg-config \
    python3.10 \
    python3.10-distutils \
    python3.10-venv \
    python3.10-dev && \
    ln -sf /usr/bin/python3.10 /usr/bin/python3 && \
    ln -sf /usr/include/python3.10 /usr/include/python3

# Instala pip manualmente (evita conflito com versões antigas)
RUN curl https://bootstrap.pypa.io/get-pip.py | python3

# Atualiza pip e instala Cython necessário para Pyfhel
RUN python3 -m pip install --upgrade pip setuptools wheel cython==3.0.10


# Instale o venv para Python 3.10
RUN apt-get install -y python3.10-venv

RUN python3.10 -m pip install --upgrade pip

EXPOSE 1883
EXPOSE 8883

# Copy the requirements file into the container

RUN pip install torch==2.2.1 torchvision==0.17.1 torchaudio==2.2.1


COPY ../requirements/container/server.requirements.txt .
COPY ../server /server


# Install the Python dependencies
RUN python3.10 -m pip install --no-cache-dir -r server.requirements.txt

# Clonar e compilar Pyfhel
RUN git clone --recursive https://github.com/ibarrond/Pyfhel.git /opt/Pyfhel && \
    cd /opt/Pyfhel && \
    git checkout v3.4.2 && \
    git submodule update --init --recursive && \
    cmake -S /opt/Pyfhel/Pyfhel/backend/SEAL \
          -B /opt/Pyfhel/Pyfhel/backend/SEAL/build \
          -DCMAKE_BUILD_TYPE=Release \
          -DSEAL_BUILD_EXAMPLES=OFF && \
    cmake --build /opt/Pyfhel/Pyfhel/backend/SEAL/build && \
    python3 -m pip install --no-build-isolation /opt/Pyfhel

# Remoção da interface padrão
# RUN apt install sudo
# RUN --security=insecure ifconfig eth0 down 
# RUN --security=insecure route add default gw 10.0.0.1

CMD ["/bin/sh", "-c", "bash"]
